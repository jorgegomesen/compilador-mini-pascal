tokens ::=  := | true | false | begin | end | if | then | else | var | : | ; | ( | 
) | float-lit | int-lit | id | while | do | , | + | - | or | * | / | and | < | 
> | <= | >= | = | <> |program| . | [ | ] | array | .. | of | integer | 
real | boolean | eot


digit ::= 0|1|...|9

letter ::= a|b|c|...|z

float-lit ::= int-lit.int-lit| int-lit. | .int-lit

int-lit ::= digit | int-lit digit

bool-lit ::= true | false

identifier ::=  letter | id digit | id letter

graphic ::= ! | @ | # | ...
 
separator::= tab | space | eol

********************** legenda tokens **********************************
eol ::= end of line
eot ::= end of text

obs.: o livro adota estes tokens, e parece-me fazer sentido que façamos o mesmo

********************** expressão Regular **********************************

identifier ::= letter(letter|digit)*
int-lit ::= digit+
float-lit ::= digit+.digit+| digit+. | .digit+ = (digit+.(digit+|ε))|.digit+